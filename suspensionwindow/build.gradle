if (rootProject.ext.params.isRelease) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        if (!rootProject.ext.params.isRelease) {
            applicationId "com.hao.suspensionwindow"
        }
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode app_android.versionCode
        versionName app_android.versionName
        testInstrumentationRunner app_android.testInstrumentationRunner

        /**
         * 用于标记注解可用
         */
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [moduleName: project.getName()]
            }
        }
    }

    sourceSets {
        main {
            if (!rootProject.ext.params.isRelease) {
                // 如果是组件化模式，需要单独运行时 Debug
                manifest.srcFile 'src/main/debug/AndroidManifest.xml' // 生效
            } else { // 正式环境下
                // 集成化模式，整个项目打包apk
                manifest.srcFile 'src/main/AndroidManifest.xml' // 让我们之前 默认的路径下的清单文件再次生效

                java {
                    // release 时 debug 目录下文件不需要合并到主工程
                    exclude "**/debug/**"
                }
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.media2:media2:1.0.0-alpha04'

    // 循环引入第三方库
    app_dependencies.each { k, v ->
        String[] all = v.split("_");
        for (int i = 0; i < all.size(); i++) {
            v = all[i]
            println v + "___________" + k
            if (v.equals("implementation")) {
                implementation k
            } else if (v.equals("implementationproject")) {
                implementation project(path: ':' + k)
            } else if (v.equals("annotationProcessorproject")) {
                if (app_android.isGradleBigThan35) {
                    kapt project(path: ':' + k)
                } else {
                    annotationProcessor project(path: ':' + k)
                }
            } else if (v.equals("annotationProcessor")) {
                if (app_android.isGradleBigThan35) {
                    kapt k
                } else {
                    annotationProcessor k
                }
            } else if (v.equals("testImplementation")) {
                if (rootProject.ext.params.isRelease) {
                    // 依附app壳
                    testImplementation k
                }
            } else if (v.equals("androidTestImplementation")) {
                androidTestImplementation k
            }
        }
    }
}